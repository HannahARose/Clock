name: Docs
  
on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  PRESET: unixlike-clang-release-docs

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v5
      with:
        # we want to find git tags to pass version to doxygen
        fetch-depth: 0

    - name: Setup Cache
      uses: ./.github/actions/setup_cache
      with:
        compiler: llvm-19.1.1
        build_type: Release
        packaging_maintainer_mode: ON
        generator: "Ninja Multi-Config"

    - name: Project Name
      uses: cardinalby/export-env-action@v2
      with:
        envFile: '.github/constants.env'

    - name: Setup Cpp
      uses: aminya/setup-cpp@v1
      with:
        compiler: llvm-19.1.1

        cmake: true
        ninja: true
        vcpkg: false
        ccache: true
        clangtidy: "19.1.1"

        cppcheck: true

    - name: Install quetzal and Doxygen dependencies
      run: sudo apt-get install -y --no-install-recommends libboost-all-dev libgdal-dev doxygen graphviz

    - name: Configure CMake
      run: |
        cmake -S . --preset=unixlike-clang-release-docs

    - name: Generate documentation
      run: |
        cmake --build ./out/build/unixlike-clang-release-docs --target=doxygen-docs

    - name: Moving Files
      run: |
        mkdir -p ./docs/api
        mv ./out/build/unixlike-clang-release-docs/html ./docs/api

      # Deploy to GitHub Pages
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./